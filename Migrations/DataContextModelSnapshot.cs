// <auto-generated />
using System;
using Especialidad.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClassItem.ClassItems", b =>
                {
                    b.Property<int>("IdClass")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameEnroll")
                        .HasColumnType("longtext");

                    b.Property<string>("NameModule")
                        .HasColumnType("longtext");

                    b.Property<string>("NameSemester")
                        .HasColumnType("longtext");

                    b.Property<string>("NameUser")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdClass");

                    b.ToTable("ClassItem");
                });

            modelBuilder.Entity("EnrollmentItem.EnrollmentItems", b =>
                {
                    b.Property<int>("IdEnroll")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("EspModule")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameEnrole")
                        .HasColumnType("longtext");

                    b.Property<string>("NameModule")
                        .HasColumnType("longtext");

                    b.Property<string>("NameUser")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdEnroll");

                    b.ToTable("EnrollmentItem");
                });

            modelBuilder.Entity("ModuleItem.ModuleItems", b =>
                {
                    b.Property<int>("IdModule")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EspModule")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameModule")
                        .HasColumnType("longtext");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdModule");

                    b.ToTable("ModuleItem");
                });

            modelBuilder.Entity("TaskItem.TaskItems", b =>
                {
                    b.Property<int>("IdTask")
                        .HasColumnType("int");

                    b.Property<string>("EspModule")
                        .HasColumnType("longtext");

                    b.Property<string>("NameModule")
                        .HasColumnType("longtext");

                    b.Property<string>("NameTask")
                        .HasColumnType("longtext");

                    b.Property<string>("NameUser")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("ScoreTask")
                        .HasColumnType("int");

                    b.HasKey("IdTask");

                    b.ToTable("TaskItem");
                });

            modelBuilder.Entity("UsersItem.UserItems", b =>
                {
                    b.Property<int>("IdModule")
                        .HasColumnType("int");

                    b.Property<int>("DniUser")
                        .HasColumnType("int");

                    b.Property<string>("EmailUser")
                        .HasColumnType("longtext");

                    b.Property<int>("IdClass")
                        .HasColumnType("int");

                    b.Property<int>("IdEnroll")
                        .HasColumnType("int");

                    b.Property<int>("IdTask")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SurnameUser")
                        .HasColumnType("longtext");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdModule");

                    b.ToTable("UserItem");
                });
#pragma warning restore 612, 618
        }
    }
}
